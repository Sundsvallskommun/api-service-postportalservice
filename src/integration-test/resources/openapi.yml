openapi: 3.0.1
info:
  title: Postportalservice
  contact: { }
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: "1.0"
servers:
  - url: http://localhost:55498
    description: Generated server url
paths:
  /{municipalityId}/precheck:
    post:
      tags:
        - Precheck Resources
      summary: "Checks how a recipient can be contacted, digital post or physical\
        \ letter"
      operationId: precheckRecipients
      parameters:
        - name: municipalityId
          in: path
          description: Municipality ID
          required: true
          schema:
            type: string
          example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrecheckRequest"
        required: true
      responses:
        "200":
          description: Successful Operation
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/messages/sms:
    post:
      tags:
        - Message Resources
      summary: Send an SMS
      operationId: sendSms
      parameters:
        - name: X-Sent-By
          in: header
          required: true
          schema:
            type: string
        - name: municipalityId
          in: path
          description: Municipality ID
          required: true
          schema:
            type: string
          example: 2281
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SmsRequest"
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/messages/registered-letter:
    post:
      tags:
        - Message Resources
      summary: Send a digital registered letter.
      operationId: sendDigitalRegisteredLetter
      parameters:
        - name: X-Sent-By
          in: header
          required: true
          schema:
            type: string
        - name: municipalityId
          in: path
          description: Municipality ID
          required: true
          schema:
            type: string
          example: 2281
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - attachments
                - request
              type: object
              properties:
                request:
                  $ref: "#/components/schemas/DigitalRegisteredLetterRequest"
                attachments:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/messages/letter:
    post:
      tags:
        - Message Resources
      summary: Send a message by either digital mail or as a physical letter. Digital
        mail is always preferred if possible.
      operationId: sendLetter
      parameters:
        - name: X-Sent-By
          in: header
          required: true
          schema:
            type: string
        - name: municipalityId
          in: path
          description: Municipality ID
          required: true
          schema:
            type: string
          example: 2281
      requestBody:
        content:
          application/json:
            schema:
              required:
                - attachments
                - request
              type: object
              properties:
                request:
                  $ref: "#/components/schemas/LetterRequest"
                attachments:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/statistics/users:
    get:
      tags:
        - Statistics Resources
      summary: Get general statistics for each user within the municipality
      operationId: getStatisticsByUser
      parameters:
        - name: municipalityId
          in: path
          description: Municipality ID
          required: true
          schema:
            type: string
          example: 2281
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/statistics/users/{userId}:
    get:
      tags:
        - Statistics Resources
      summary: Get statistics for a specific user within the municipality
      operationId: getUserStatistics
      parameters:
        - name: municipalityId
          in: path
          description: Municipality ID
          required: true
          schema:
            type: string
          example: 2281
        - name: userId
          in: path
          description: User ID
          required: true
          schema:
            type: string
          example: joe12doe
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/statistics/departments:
    get:
      tags:
        - Statistics Resources
      summary: Get general statistics for each department within the municipality
      operationId: getStatisticsByDepartment
      parameters:
        - name: municipalityId
          in: path
          description: Municipality ID
          required: true
          schema:
            type: string
          example: 2281
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/statistics/departments/{departmentId}:
    get:
      tags:
        - Statistics Resources
      summary: Get statistics for a specific department within the municipality
      operationId: getDepartmentStatistics
      parameters:
        - name: municipalityId
          in: path
          description: Municipality ID
          required: true
          schema:
            type: string
          example: 2281
        - name: departmentId
          in: path
          description: Department ID
          required: true
          schema:
            type: string
          example: 1337
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/history/users/{userId}/messages:
    get:
      tags:
        - History Resources
      summary: Get messages sent by user
      operationId: getUserMessages
      parameters:
        - name: municipalityId
          in: path
          description: Municipality ID
          required: true
          schema:
            type: string
          example: 2281
        - name: userId
          in: path
          description: User ID
          required: true
          schema:
            type: string
          example: joe01doe
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/history/users/{userId}/messages/{messageId}:
    get:
      tags:
        - History Resources
      summary: Get messages sent by user
      operationId: getUserMessage
      parameters:
        - name: municipalityId
          in: path
          description: Municipality ID
          required: true
          schema:
            type: string
          example: 2281
        - name: userId
          in: path
          description: User ID
          required: true
          schema:
            type: string
          example: joe01doe
        - name: messageId
          in: path
          description: Message ID
          required: true
          schema:
            type: string
          example: 123456
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/history/messages/{messageId}:
    get:
      tags:
        - History Resources
      summary: Get message by ID
      operationId: getMessageById
      parameters:
        - name: municipalityId
          in: path
          description: Municipality ID
          required: true
          schema:
            type: string
          example: 2281
        - name: messageId
          in: path
          description: Message ID
          required: true
          schema:
            type: string
          example: 123456
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/attachments/{attachmentId}:
    get:
      tags:
        - Attachment Resources
      summary: Stream attachment by attachmentId
      operationId: streamAttachment
      parameters:
        - name: municipalityId
          in: path
          description: Municipality ID
          required: true
          schema:
            type: string
          example: 2281
        - name: attachmentId
          in: path
          description: Attachment ID
          required: true
          schema:
            type: string
          example: 123456
      responses:
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /{municipalityId}/attachments/messages/{messageId}:
    get:
      tags:
        - Attachment Resources
      summary: "Get the name and id of attachments by messageId, the actual attachment\
        \ can be streamed using the attachmentId"
      operationId: getAttachmentsByMessageId
      parameters:
        - name: municipalityId
          in: path
          description: Municipality ID
          required: true
          schema:
            type: string
          example: 2281
        - name: messageId
          in: path
          description: Message ID
          required: true
          schema:
            type: string
          example: 123456
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: Bad Gateway
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /api-docs:
    get:
      tags:
        - API
      summary: OpenAPI
      operationId: getApiDocs
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: string
      x-auth-type: None
      x-throttling-tier: Unlimited
      x-wso2-mutual-ssl: Optional
components:
  schemas:
    PrecheckRequest:
      required:
        - recipients
      type: object
      properties:
        recipients:
          minItems: 1
          type: array
          description: List of recipients represented by their partyId. Each partyId
            is a unique identifier for a recipient and must be provided as a valid
            UUID string.
          items:
            minLength: 1
            type: string
            description: Recipient partyId (UUID).
            example: 550e8400-e29b-41d4-a716-446655440000
      description: Precheck request model
    Problem:
      type: object
      properties:
        instance:
          type: string
          format: uri
        type:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        status:
          $ref: "#/components/schemas/StatusType"
        detail:
          type: string
        title:
          type: string
    StatusType:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        reasonPhrase:
          type: string
    ConstraintViolationProblem:
      type: object
      properties:
        cause:
          $ref: "#/components/schemas/ThrowableProblem"
        stackTrace:
          type: array
          items:
            $ref: "#/components/schemas/ConstraintViolationProblemStackTraceInner"
        type:
          type: string
          format: uri
        status:
          $ref: "#/components/schemas/StatusType"
        violations:
          type: array
          items:
            $ref: "#/components/schemas/Violation"
        title:
          type: string
        message:
          type: string
        instance:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        detail:
          type: string
        suppressed:
          type: array
          items:
            $ref: "#/components/schemas/ConstraintViolationProblemSuppressedInner"
        localizedMessage:
          type: string
    ConstraintViolationProblemStackTraceInner:
      type: object
      properties:
        classLoaderName:
          type: string
        moduleName:
          type: string
        moduleVersion:
          type: string
        methodName:
          type: string
        fileName:
          type: string
        lineNumber:
          type: integer
          format: int32
        className:
          type: string
        nativeMethod:
          type: boolean
    ConstraintViolationProblemSuppressedInner:
      type: object
      properties:
        stackTrace:
          type: array
          items:
            $ref: "#/components/schemas/ConstraintViolationProblemStackTraceInner"
        message:
          type: string
        localizedMessage:
          type: string
    ThrowableProblem:
      type: object
      properties:
        cause:
          $ref: "#/components/schemas/ThrowableProblem"
        stackTrace:
          type: array
          items:
            $ref: "#/components/schemas/ConstraintViolationProblemStackTraceInner"
        message:
          type: string
        instance:
          type: string
          format: uri
        type:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        status:
          $ref: "#/components/schemas/StatusType"
        detail:
          type: string
        title:
          type: string
        suppressed:
          type: array
          items:
            $ref: "#/components/schemas/ConstraintViolationProblemSuppressedInner"
        localizedMessage:
          type: string
    Violation:
      type: object
      properties:
        field:
          type: string
        message:
          type: string
    SmsRecipient:
      type: object
      properties:
        partyId:
          type: string
          description: PartyId is the unique identifier for the recipient
          example: 6d0773d6-3e7f-4552-81bc-f0007af95adf
        phoneNumber:
          type: string
          description: "Phone number of the recipient, used for SMS notifications"
          example: "+46701234567"
      description: SMS recipient model
    SmsRequest:
      required:
        - message
        - recipients
      type: object
      properties:
        message:
          minLength: 1
          type: string
          description: The message to be sent
          example: This is the message to be sent
        recipients:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/SmsRecipient"
      description: SMS request model
    DigitalRegisteredLetterRequest:
      required:
        - body
        - subject
      type: object
      properties:
        body:
          minLength: 1
          type: string
          description: The body of the letter in HTML format
          example: <h1>This is the body of the letter</h1>
        contentType:
          type: string
          description: The content type of the body
          example: text/html
        partyId:
          type: string
          description: The party id of the recipient
          example: 6d0773d6-3e7f-4552-81bc-f0007af95adf
        subject:
          minLength: 1
          type: string
          description: The subject of the letter
          example: This is the subject of the letter
      description: Digital registered letter request model
    Address:
      required:
        - city
        - country
        - firstName
        - lastName
        - street
        - zipCode
      type: object
      properties:
        firstName:
          minLength: 1
          type: string
          description: First name of the recipient
          example: John
        lastName:
          minLength: 1
          type: string
          description: Last name of the recipient
          example: Doe
        street:
          minLength: 1
          type: string
          description: Street address
          example: Main Street 1
        apartmentNumber:
          type: string
          description: Apartment number
          example: "1101"
        careOf:
          type: string
          description: Care of
          example: c/o Jane Doe
        zipCode:
          minLength: 1
          type: string
          description: Zip code
          example: "12345"
        city:
          minLength: 1
          type: string
          description: City
          example: Sundsvall
        country:
          minLength: 1
          type: string
          description: Country
          example: Sweden
      description: Address model
    LetterRequest:
      required:
        - subject
      type: object
      properties:
        subject:
          minLength: 1
          type: string
          description: The subject of the letter
          example: This is the subject of the letter
        body:
          type: string
          description: The body of the letter
          example: This is the body of the letter
        contentType:
          type: string
          description: The content type of the body
          example: text/plain
        recipients:
          type: array
          items:
            $ref: "#/components/schemas/Recipient"
        addresses:
          type: array
          items:
            $ref: "#/components/schemas/Address"
      description: Letter request model
    Recipient:
      required:
        - deliveryMethod
      type: object
      properties:
        partyId:
          type: string
          description: PartyId is the unique identifier for the recipient
          example: 6d0773d6-3e7f-4552-81bc-f0007af95adf
        deliveryMethod:
          type: string
          description: Delivery method for the recipient
          example: DIGITAL_MAIL
          enum:
            - DIGITAL_MAIL
            - SNAIL_MAIL
            - DELIVERY_NOT_POSSIBLE
        address:
          $ref: "#/components/schemas/Address"
      description: Recipient model
  securitySchemes: { }

